apiVersion: v1
kind: Namespace
metadata:
  name: netboot
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: netboot
  name: netboot
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: netboot
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: netboot
subjects:
- kind: ServiceAccount
  namespace: netboot
  name: netboot
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: kube-system
  name: netboot
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: netboot
subjects:
- kind: ServiceAccount
  namespace: netboot
  name: netboot
--- 
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  namespace: netboot
  name: netboot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: netboot
  template:
    metadata:
      labels:
        app: netboot
    spec:
      containers:
      - name: netboot
        image: '{{ env "USER" }}.azurecr.io/netboot:latest'
        volumeMounts:
        - mountPath: /provisioner.yaml
          readOnly: true
          subPath: provisioner.yaml
          name: netboot
      hostNetwork: true
      nodeName: laptop
      serviceAccountName: netboot
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
      volumes:
      - configMap:
          name: netboot
        name: netboot
